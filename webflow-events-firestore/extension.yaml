# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: webflow-events-firestore
version: 0.1.18
specVersion: v1beta

displayName: Webflow Events Firestore
description: Webflow integration for Google Cloud Firestore

license: Apache-2.0

sourceUrl: https://github.com/simplycubed/extensions/tree/main/webflow-events-firestore
releaseNotesUrl: https://github.com/simplycubed/extensions/tree/main/webflow-events-firestore/CHANGELOG.md

author:
  authorName: SimplyCubed
  url: https://simplycubed.com

contributors:
  - authorName: Charles Green
    url: https://github.com/charlesgreen
  - authorName: Anas Muhammed
    url: https://github.com/anasmuhmd

billingRequired: true

roles:
  - role: datastore.owner
    reason:
      Allows the extension to create, update and delete user data from Cloud
      Firestore.

resources:
  - name: webflowHook
    type: firebaseextensions.v1beta.function
    description:
      Hooks for webflow, contains endpoints that handle events from webflow and
      oauth endpoints for configuring webhooks.
    properties:
      location: ${param:LOCATION}
      runtime: nodejs16
      httpsTrigger:
        securityLevel: SECURE_ALWAYS
        url: https://${param:LOCATION}-${param:PROJECT_ID}.cloudfunctions.net/webflowHook

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?  You
      usually want a location close to your database or Storage bucket. For help
      selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: USER_FIRESTORE_PATH
    label: Cloud Firestore collection path for storing users
    description: >-
      To which collection should the user events sync to? Leave empty if you
      don't want to sync user membership events.
    type: string
    example: users
    required: false

  - param: ORDER_FIRESTORE_PATH
    label: Cloud Firestore collection path for storing orders
    description: >-
      To which collection should the order events sync to? Leave empty if you
      don't want to sync order events.
    type: string
    example: orders
    required: false

  - param: INVENTORY_FIRESTORE_PATH
    label: Cloud Firestore collection path for storing inventory
    description: >-
      To which collection should the inventory events sync to? Leave empty if
      you don't want to sync inventory events.
    type: string
    example: inventory
    required: false

  - param: COLLECTION_ITEM_FIRESTORE_PATH
    label: Cloud Firestore collection path for storing collection items
    description: >-
      To which collection should the collection items events sync to? Leave
      empty if you don't want to sync collection items events.
    type: string
    example: collection-items
    required: false

  - param: FORM_SUBMISSION_FIRESTORE_PATH
    label: Cloud Firestore collection path for storing form submissions
    description: >-
      To which collection should the form submissions events sync to? Leave
      empty if you don't want to sync form submissions events.
    type: string
    example: form-submissions
    required: false

  - param: SITE_PUBLISH_FIRESTORE_PATH
    label: Cloud Firestore collection path for storing site publish events
    description: >-
      To which collection should the site publish events sync to? Leave empty if
      you don't want to sync site publish events.
    type: string
    example: site-publish
    required: false

  - param: WEBFLOW_APP_CLIENT_ID
    label: Client ID of the webflow app from which hooks will be created.
    description: >-
      Client ID of the webflow app from which hooks will be  created.
    type: secret
    example: 5af48d73b096a6712c70f11483130
    required: true

  - param: WEBFLOW_APP_CLIENT_SECRET
    label: Client secret of the webflow app from which hooks will be  created.
    description: >-
      Client secret of the webflow app from which hooks will be  created.
    type: secret
    example: 72811beacf8e996ba762b6c4ea7b9027
    required: true

  - param: WEBFLOW_SITE_ID
    label: Webflow site id for which hooks will be  created.
    description: >-
      Webflow site id for which hooks will be  created.
    type: string
    example: 639a47785bc626ab0650d7d7
    required: true

events:
  - type: firebase.extensions.webflow-events-firestore.v1.received
    description: Occurs when a payload is received from webflow
